{"version":3,"sources":["components/Buttons.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","sendNumber","num","props","btnNumber","btnZero","Button","style","width","variant","onClick","this","btnOther","className","React","Component","Calculator","handleNumber","data","val","rst","isFlag","state","arrSign","isDot","setState","console","log","sign","result","toString","clac","Number","value","num1","num2","rows","i","push","length","type","name","readOnly","ButtonGroup","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4RAmBeA,E,4MAfXC,WAAa,SAACC,GACV,EAAKC,MAAMC,UAAUF,I,uDAGf,IAAD,OACCG,EAAU,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,MAAM,SAAUC,QAAQ,YAAYC,QAAS,WAAO,EAAKT,WAAW,EAAKE,MAAMD,OAAQ,4BAAKS,KAAKR,MAAMD,MACjIU,EAAW,kBAACN,EAAA,EAAD,CAAQG,QAAQ,YAAYC,QAAS,WAAO,EAAKT,WAAW,EAAKE,MAAMD,OAAQ,4BAAKS,KAAKR,MAAMD,MAChH,OACI,yBAAKW,UAAU,YACS,IAAnBF,KAAKR,MAAMD,IAAYG,EAAUO,O,GAV5BE,IAAMC,WCiMbC,E,kDA/LX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAaVc,aAAe,SAACC,GACZ,IAAIC,EAAM,EACNC,EAAM,EACNC,GAAS,EAGb,GAAkB,iBAARH,GAAoBA,IAAS,EAAKI,MAAMC,QAAQ,GAAI,CAE1D,GAAGL,IAAS,EAAKI,MAAMC,QAAQ,GAAI,CAC/B,GAAG,EAAKD,MAAME,MACV,OAGJ,EAAKC,SAAS,CACVD,OAAO,IAEXE,QAAQC,IAAI,UAAW,EAAKL,MAAME,OAGtC,GAAuB,KAApB,EAAKF,MAAMM,KAAa,CACvB,GAAY,IAATV,IAAe,EAAKI,MAAMD,OACzB,OAEyB,IAAtB,EAAKC,MAAMO,OACV,EAAKJ,SAAS,CACVI,OAAQ,EAAKP,MAAMO,OAASX,EAC5BG,QAAQ,IAGZ,EAAKI,SAAS,CACVI,OAAQ,EAAKP,MAAMO,OAAOC,WAAaZ,EACvCG,QAAQ,SAKjB,EAAKC,MAAMD,QAAgC,IAAtB,EAAKC,MAAMO,OAC/B,EAAKJ,SAAS,CACVI,OAAQ,EAAKP,MAAMO,OAAOC,WAAaZ,IAGxCA,IAAS,EAAKI,MAAMC,QAAQ,GAC3B,EAAKE,SAAS,CACVI,OAAQ,EAAKP,MAAMO,OAAOC,WAAaZ,EACvCG,QAAQ,KAGZK,QAAQC,IAAI,WAAY,EAAKL,MAAMO,QACnC,EAAKJ,SAAS,CACVI,OAAQX,EACRG,QAAQ,SAKrB,CAEH,GAAGH,IAAS,EAAKI,MAAMC,QAAQ,GAC3BJ,EAAM,KACNC,EAAM,EACNF,EAAO,QAEL,GAAGA,IAAS,EAAKI,MAAMC,QAAQ,GAAI,CACrC,IAAI,EAAKD,MAAMD,OAAQ,OAEvBF,EAAM,KACNC,EAAM,EAAKW,KAAKC,OAAO,EAAKV,MAAMW,OAAQD,OAAO,EAAKV,MAAMO,QAAS,EAAKP,MAAMM,WAE7E,GAAGV,IAAS,EAAKI,MAAMC,QAAQ,GAE9BJ,EADoB,OAArB,EAAKG,MAAMW,MACJ,KAEA,EAAKX,MAAMW,MAErBb,GAA2B,EAArB,EAAKE,MAAMO,OACjBR,EAAS,EAAKC,MAAMD,OACpBH,EAAO,EAAKI,MAAMM,UAEf,GAAGV,IAAS,EAAKI,MAAMC,QAAQ,GAE9BJ,EADoB,OAArB,EAAKG,MAAMW,MACJ,KAEA,EAAKX,MAAMW,MAErBb,EAA0B,IAApB,EAAKE,MAAMO,OACjBR,EAAS,EAAKC,MAAMD,OACpBH,EAAO,EAAKI,MAAMM,SAEf,CACH,IAAI,EAAKN,MAAMD,QAAU,EAAKC,MAAMM,OAASV,EAAM,OAEnD,GAAuB,MAApB,EAAKI,MAAMW,MACVd,EAAM,EAAKG,MAAMO,OACjBT,EAAM,EAAKE,MAAMO,WACd,CACH,IAAI,EAAKP,MAAMD,OAIX,YAHA,EAAKI,SAAS,CACVG,KAAMV,IAIdC,EAAM,EAAKY,KAAKC,OAAO,EAAKV,MAAMW,OAAQD,OAAO,EAAKV,MAAMO,QAAS,EAAKP,MAAMM,MAChFR,EAAM,EAAKW,KAAKC,OAAO,EAAKV,MAAMW,OAAQD,OAAO,EAAKV,MAAMO,QAAS,EAAKP,MAAMM,OAIxF,EAAKH,SAAS,CACVQ,MAAOd,EACPU,OAAQT,EACRQ,KAAMV,EACNG,OAAQA,EACRG,OAAO,MA7HA,EAmInBO,KAAO,SAACG,EAAMC,EAAMP,GAChB,OAAGA,IAAS,EAAKN,MAAMC,QAAQ,GACpBW,EAAOC,EACRP,IAAS,EAAKN,MAAMC,QAAQ,GAC3BW,EAAOC,EACRP,IAAS,EAAKN,MAAMC,QAAQ,GAC3BW,EAAOC,EACRP,IAAS,EAAKN,MAAMC,QAAQ,GAC3BW,EAAOC,OADX,GAvIP,EAAKb,MAAQ,CACTW,MAAO,KACPJ,OAAQ,EACRD,KAAM,GACNP,QAAQ,EACRG,OAAO,EACPD,QAAS,CAAC,IAAI,IAAI,IAAI,OAAI,IAAI,IAAI,MAAM,IAAI,MATjC,E,qDAiJf,IADA,IAAIa,EAAO,GACFC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKE,KAAK,kBAAC,EAAD,CAASpC,IAAKmC,EAAGjC,UAAaO,KAAKM,gBAG/C,IAAI,IAAIoB,EAAI,EAAGA,EAAI1B,KAAKW,MAAMC,QAAQgB,OAAQF,IAC1CD,EAAKE,KAAK,kBAAC,EAAD,CAASpC,IAAKS,KAAKW,MAAMC,QAAQc,GAAIjC,UAAaO,KAAKM,gBAGrE,OACI,yBAAKJ,UAAU,QACX,6BACI,0DAEJ,6BACI,2BAAO2B,KAAK,OAAOC,KAAK,eAAeR,MAAOtB,KAAKW,MAAMO,OAAQa,UAAQ,KAE7E,6BACI,kBAACC,EAAA,EAAD,CAAaC,aAAW,gBACnBR,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAKA,EAAK,MAG5C,6BACI,kBAACO,EAAA,EAAD,CAAaC,aAAW,eACnBR,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGzC,6BACI,kBAACO,EAAA,EAAD,CAAaC,aAAW,gBACnBR,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGzC,6BACI,kBAACO,EAAA,EAAD,CAAaC,aAAW,eACnBR,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGzC,6BACI,kBAACO,EAAA,EAAD,CAAaC,aAAW,gBACnBR,EAAK,GAAIA,EAAK,IAAKA,EAAK,W,GAxLxBtB,IAAMC,WCQhB8B,MARf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,QCKciC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.7e97ab50.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Buttons extends React.Component {\r\n    sendNumber = (num) => {\r\n        this.props.btnNumber(num);\r\n    }\r\n\r\n    render() {\r\n        const btnZero = <Button style={{width:\"161px\"}} variant=\"secondary\" onClick={() => {this.sendNumber(this.props.num);}}><h4>{this.props.num}</h4></Button>;\r\n        const btnOther = <Button variant=\"secondary\" onClick={() => {this.sendNumber(this.props.num);}}><h4>{this.props.num}</h4></Button>;\r\n        return (\r\n            <div className=\"btnClass\">\r\n                {this.props.num === 0 ? btnZero : btnOther}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Buttons from './Buttons';\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: null,\r\n            result: 0,\r\n            sign: '',\r\n            isFlag: false,\r\n            isDot: false,\r\n            arrSign: [\"+\",\"-\",\"x\",\"รท\",\"C\",\"=\",\"+/-\",\"%\",\".\"]\r\n        }\r\n    }\r\n\r\n    // callback from Buttons component\r\n    handleNumber = (data) => {\r\n        let val = 0;\r\n        let rst = 0;\r\n        let isFlag = false;\r\n\r\n        // button number or button .\r\n        if(typeof data == 'number' || data === this.state.arrSign[8]) {\r\n            // button .\r\n            if(data === this.state.arrSign[8]) {\r\n                if(this.state.isDot) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    isDot: true\r\n                });\r\n                console.log(\"isDot: \", this.state.isDot);\r\n            }\r\n\r\n            if(this.state.sign === '') {\r\n                if(data === 0 && !this.state.isFlag) {\r\n                    return;\r\n                } else {\r\n                    if(this.state.result === 0) {\r\n                        this.setState({\r\n                            result: this.state.result + data,\r\n                            isFlag: true\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            result: this.state.result.toString() + data,\r\n                            isFlag: true\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                if(this.state.isFlag && this.state.result !== 0) {\r\n                    this.setState({\r\n                        result: this.state.result.toString() + data\r\n                    });\r\n                } else {\r\n                    if(data === this.state.arrSign[8]) {\r\n                        this.setState({\r\n                            result: this.state.result.toString() + data,\r\n                            isFlag: true\r\n                        });\r\n                    } else {\r\n                        console.log(\"result: \", this.state.result);\r\n                        this.setState({\r\n                            result: data,\r\n                            isFlag: true\r\n                        });\r\n                    }\r\n                }   \r\n            }\r\n        } else {\r\n            // button C\r\n            if(data === this.state.arrSign[4]) {\r\n                val = null;\r\n                rst = 0;\r\n                data = '';\r\n            // button =\r\n            }else if(data === this.state.arrSign[5]) {\r\n                if(!this.state.isFlag) return;\r\n\r\n                val = null;\r\n                rst = this.clac(Number(this.state.value), Number(this.state.result), this.state.sign);\r\n            // button +/-\r\n            } else if(data === this.state.arrSign[6]) {\r\n                if(this.state.value === null) {\r\n                    val = null;\r\n                } else {\r\n                    val = this.state.value;\r\n                }\r\n                rst = this.state.result * -1;\r\n                isFlag = this.state.isFlag;\r\n                data = this.state.sign;\r\n            // button %\r\n            } else if(data === this.state.arrSign[7]) {\r\n                if(this.state.value === null) {\r\n                    val = null;\r\n                } else {\r\n                    val = this.state.value;\r\n                }\r\n                rst = this.state.result * 0.01;\r\n                isFlag = this.state.isFlag;\r\n                data = this.state.sign;\r\n            // button +,-,*,/\r\n            } else {\r\n                if(!this.state.isFlag && this.state.sign === data) return;\r\n\r\n                if(this.state.value == null) {\r\n                    val = this.state.result;\r\n                    rst = this.state.result;\r\n                } else {\r\n                    if(!this.state.isFlag) {\r\n                        this.setState({\r\n                            sign: data\r\n                        });\r\n                        return;\r\n                    }\r\n                    val = this.clac(Number(this.state.value), Number(this.state.result), this.state.sign);\r\n                    rst = this.clac(Number(this.state.value), Number(this.state.result), this.state.sign);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                value: val,\r\n                result: rst,\r\n                sign: data,\r\n                isFlag: isFlag,\r\n                isDot: false\r\n            });\r\n        }\r\n    }\r\n\r\n    // calculate between num1 and num2\r\n    clac = (num1, num2, sign) => {\r\n        if(sign === this.state.arrSign[0]) {\r\n            return num1 + num2;\r\n        } else if(sign === this.state.arrSign[1]) {\r\n            return num1 - num2;\r\n        } else if(sign === this.state.arrSign[2]) {\r\n            return num1 * num2;\r\n        } else if(sign === this.state.arrSign[3]) {\r\n            return num1 / num2;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows = [];\r\n        for (let i = 0; i < 10; i++) {\r\n          rows.push(<Buttons num={i} btnNumber = {this.handleNumber} />);\r\n        }\r\n\r\n        for(let i = 0; i < this.state.arrSign.length; i++) {\r\n            rows.push(<Buttons num={this.state.arrSign[i]} btnNumber = {this.handleNumber} />);\r\n        }\r\n\r\n        return (\r\n            <div className=\"Main\">\r\n                <div>\r\n                    <h3>A simple React calculator</h3>\r\n                </div>\r\n                <div>\r\n                    <input type=\"text\" name=\"input_number\" value={this.state.result} readOnly />\r\n                </div>\r\n                <div>\r\n                    <ButtonGroup aria-label=\"Fourth group\">\r\n                        {rows[14]}{rows[16]}{rows[17]}{rows[13]}\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div>\r\n                    <ButtonGroup aria-label=\"First group\">\r\n                        {rows[7]}{rows[8]}{rows[9]}{rows[12]}\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div>\r\n                    <ButtonGroup aria-label=\"Second group\">\r\n                        {rows[4]}{rows[5]}{rows[6]}{rows[11]}\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div>\r\n                    <ButtonGroup aria-label=\"Third group\">\r\n                        {rows[1]}{rows[2]}{rows[3]}{rows[10]}\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div>\r\n                    <ButtonGroup aria-label=\"Fourth group\">\r\n                        {rows[0]}{rows[18]}{rows[15]}\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}